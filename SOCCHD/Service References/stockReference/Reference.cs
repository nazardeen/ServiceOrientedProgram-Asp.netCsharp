//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SOCCHD.stockReference {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="stockReference.stockSoap")]
    public interface stockSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/buyProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool buyProduct(string ProductID, int ProductQuantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/buyProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> buyProductAsync(string ProductID, int ProductQuantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AutoID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AutoID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AutoID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AutoIDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCategoryName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCategoryName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCategoryName", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCategoryNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearchProduct(string ProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchProductAsync(string ProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchIDD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearchIDD(string ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchIDD", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchIDDAsync(string ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Availibility", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Availibility(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Availibility", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AvailibilityAsync(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCategoryID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getCategoryID(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCategoryID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getCategoryIDAsync(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string insertProduct(string productID, string productName, string productDes, string category, int qty, int price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<string> insertProductAsync(string productID, string productName, string productDes, string category, int qty, int price);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface stockSoapChannel : SOCCHD.stockReference.stockSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class stockSoapClient : System.ServiceModel.ClientBase<SOCCHD.stockReference.stockSoap>, SOCCHD.stockReference.stockSoap {
        
        public stockSoapClient() {
        }
        
        public stockSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public stockSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public stockSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public stockSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool buyProduct(string ProductID, int ProductQuantity) {
            return base.Channel.buyProduct(ProductID, ProductQuantity);
        }
        
        public System.Threading.Tasks.Task<bool> buyProductAsync(string ProductID, int ProductQuantity) {
            return base.Channel.buyProductAsync(ProductID, ProductQuantity);
        }
        
        public string AutoID() {
            return base.Channel.AutoID();
        }
        
        public System.Threading.Tasks.Task<string> AutoIDAsync() {
            return base.Channel.AutoIDAsync();
        }
        
        public System.Data.DataSet getCategoryName() {
            return base.Channel.getCategoryName();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCategoryNameAsync() {
            return base.Channel.getCategoryNameAsync();
        }
        
        public System.Data.DataSet SearchProduct(string ProductName) {
            return base.Channel.SearchProduct(ProductName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchProductAsync(string ProductName) {
            return base.Channel.SearchProductAsync(ProductName);
        }
        
        public System.Data.DataSet SearchIDD(string ProductID) {
            return base.Channel.SearchIDD(ProductID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchIDDAsync(string ProductID) {
            return base.Channel.SearchIDDAsync(ProductID);
        }
        
        public System.Data.DataSet Availibility(string Name) {
            return base.Channel.Availibility(Name);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AvailibilityAsync(string Name) {
            return base.Channel.AvailibilityAsync(Name);
        }
        
        public string getCategoryID(string categoryName) {
            return base.Channel.getCategoryID(categoryName);
        }
        
        public System.Threading.Tasks.Task<string> getCategoryIDAsync(string categoryName) {
            return base.Channel.getCategoryIDAsync(categoryName);
        }
        
        public string insertProduct(string productID, string productName, string productDes, string category, int qty, int price) {
            return base.Channel.insertProduct(productID, productName, productDes, category, qty, price);
        }
        
        public System.Threading.Tasks.Task<string> insertProductAsync(string productID, string productName, string productDes, string category, int qty, int price) {
            return base.Channel.insertProductAsync(productID, productName, productDes, category, qty, price);
        }
    }
}
